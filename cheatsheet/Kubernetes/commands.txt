//You can point your docker client to the VM's docker daemon by running
eval $(minikube docker-env)

//describe element
kubectl describe pod query 

//list stuff - use the -w (--watch) flag to continuously watch for updates
kubectl get all

//start pod
kubectl apply -f query.yml

//get pod port
kubectl get pods podname --template='{{(index (index .spec.containers 0).ports 0).containerPort}}{{"\n"}}'

//delete deployment
kubectl delete -n NAMESPACE deployment DEPLOYMENT

//delete everything created by all the files in this folder
kubectl delete -f .

//get local docker image in minikube
//paste daemon.json to /etc/docker
//-host:
	kubectl port-forward --namespace kube-system $(kubectl get po -n kube-system | grep kube-registry-v0 | awk '{print $1;}') 5000:5000

	docker push localhost.localdomain:5000/teachingmaterialqueryservice
//-minikube
	eval $(minikube docker-env)
	docker pull localhost.localdomain:5000/teachingmaterialqueryservice


//show pods w/ labels
kubectl get po --show-labels

//show pods w/ details
kubectl get pods -o wide

//ssh into container (1 container\pod)
kubectl exec -it pod-name -- /bin/bash
//multiple containers\pod
kubectl exec -it pod-name --container container-name -- /bin/bash

//modify a running service
kubectl patch service sonar-sonarqube -n sonarqube --type='json' --patch='[{"op": "replace", "path": "/spec/ports/0/nodePort", "value":31111}]'

//get application logs from pod
kubectl logs pod_name

//cop79 files between EC2 and own machine
scp -i /home/adwork/Desktop/Deplyoment/Terraform-kops-bootstrap/ownsecond.pem ~/*.yaml ec2-user@ec2-18-185-118-105.eu-central-1.compute.amazonaws.com:/tmp

//list services in a namespace
kubectl get svc -n kube-system
