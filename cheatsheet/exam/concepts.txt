//API

API and Web service serve as a means of communication. The only difference is that a Web service facilitates interaction between two machines over a network. An API acts as an interface between two different applications so that they can communicate with each other. An API is a method by which the third-party vendors can write programs that interface easily with other programs.
https://medium.com/@programmerasi/difference-between-api-and-web-service-73c873573c9d


//REST

REST, or REpresentational State Transfer, is an architectural style for providing standards between computer systems on the web, making it easier for systems to communicate with each other. REST-compliant systems, often called RESTful systems, are characterized by how they are stateless and separate the concerns of client and server.
https://www.codecademy.com/articles/what-is-rest


//AJAX 
Asynchronous JavaScript And XML. Browser technology.
- no need to refresh page all the time, send data in background

//PROMISE & FETCH

A Promise is a proxy for a value not necessarily known when the promise is created. It allows you to associate handlers with an asynchronous action's eventual success value or failure reason. This lets asynchronous methods return values like synchronous methods: instead of immediately returning the final value, the asynchronous method returns a promise to supply the value at some point in the future.
Resolve and reject are functions that return a value.


Examples

Then
const URL = 'http://whatthecommit.com/index.txt';

const myAsyncAjax = (url) => {
  return new Promise((resolve, reject) => {
    const xhr = new XMLHttpRequest();
    xhr.open('GET', url);
    xhr.onload = () => resolve(xhr.responseText);
    xhr.onerror = () => reject(xhr.statusText);
    xhr.send();
  });
};

myAsyncAjax(URL).then((response) => {
  console.log(response);
});
Catch
const erroredFunction = () =>{
  return new Promise(() => {
    throw new Error('Uh-oh!');
  });
};

const promise = erroredFunction();
promise.catch((error) => {
  console.log(error.message);
});
Fetch
const URL = 'http://api.icndb.com/jokes/random';

fetch(URL)
  .then(response => response.json())
  .then(myJson => console.log(myJson));

__________________________________________________________________________

  Promise.all([
  booksPromise,
  userPromise
])
  .then(R.apply(pickTopRecommentations));


